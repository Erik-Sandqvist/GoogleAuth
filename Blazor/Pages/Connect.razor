@page "/connect/{id}"
@using Blazor.State


@code {
    public Task<AuthenticationState> AuthState { get; set; }
    [Parameter] public string Id { get; set; } = string.Empty;
    protected async override Task OnParametersSetAsync()
    {
        var client = HttpClientFactory.CreateClient(Constant.Client);

        try {
            var user = (await AuthState).User;
            if (user.Identity!.IsAuthenticated)
                NavManager.NavigateTo("/");

        }
        catch { }

        if (string.IsNullOrEmpty(Id))
            NavManager.NavigateTo("/");

        var response = await client.GetAsync($"authorize/token/{Id}");
        if (response.IsSuccessStatusCode)
        {
            string accessToken = await response.Content.ReadAsStringAsync();
            await localStorageService.SaveAsStringAsync(Constant.Key, accessToken); 
            var authState = (CustomAuthState)authStateProvider;
            authState.NotifyAuthStateChanged();
            NavManager.NavigateTo("/", true);
        }
       
        NavManager.NavigateTo("/");
    }

}
